package lights;

import fr.liglab.adele.icasa.device.DeviceListener;
import fr.liglab.adele.icasa.device.GenericDevice;
import fr.liglab.adele.icasa.device.presence.PresenceSensor;
import fr.liglab.adele.icasa.device.light.BinaryLight;
import java.util.Map;

public class BinaryLightImpl implements DeviceListener {
	
	public static final String LOCATION_PROPERTY_NAME = "Location";
	public static final String LOCATION_UNKNOWN = "unknown";

	/** Field for PresenceSensors dependency */
	private PresenceSensor[] PresenceSensors;
	/** Field for binaryLights dependency */
	private BinaryLight[] binaryLights;

	/** Bind Method for binaryLights dependency */
	public void bindBinaryLight(BinaryLight binaryLight, Map properties) {
		// TODO: Add your implementation code here
		System.out.println("Bind binary light " + binaryLight.getSerialNumber());
	}

	/** Unbind Method for binaryLights dependency */
	public void unbindBinaryLight(BinaryLight binaryLight, Map properties) {
		// TODO: Add your implementation code here
		System.out.println("Unbind binary light " + binaryLight.getSerialNumber());
	}

	/** Bind Method for PresenceSensors dependency */
	public void bindPresenceSensor(PresenceSensor presenceSensor, Map properties) {
		// TODO: Add your implementation code here
		System.out.println("Bind presence sensor " + presenceSensor.getSerialNumber());
		presenceSensor.addListener(this); //..
	}

	/** Unbind Method for PresenceSensors dependency */
	public void unbindPresenceSensor(PresenceSensor presenceSensor, Map properties) {
		// TODO: Add your implementation code here
		System.out.println("Unbind presence sensor " + presenceSensor.getSerialNumber());
	}

	/** Component Lifecycle Method */
	public void stop() {
		// TODO: Add your implementation code here
		System.out.println("Binary light component is stopping");
	}

	/** Component Lifecycle Method */
	public void start() {
		// TODO: Add your implementation code here
		System.out.println("Binary light component is starting");
	}

	public void deviceAdded(GenericDevice arg0) {
		// TODO Auto-generated method stub
		
	}

	public void deviceEvent(GenericDevice arg0, Object arg1) {
		// TODO Auto-generated method stub
		
	}

	public void devicePropertyAdded(GenericDevice arg0, String arg1) {
		// TODO Auto-generated method stub
		
	}

	public void devicePropertyModified(GenericDevice device, String propertyName,
			Object oldValue, Object newValue) {
		// TODO Auto-generated method stub
		PresenceSensor changingSensor = (PresenceSensor) device;
		  // check the change is related to presence sensing
		  if (propertyName.equals(PresenceSensor.PRESENCE_SENSOR_SENSED_PRESENCE)) {
		    // get the location where the sensor is:
		    String detectorLocation = (String) changingSensor.getPropertyValue(LOCATION_PROPERTY_NAME);
		    // if the location is known :
		    if (!detectorLocation.equals(LOCATION_UNKNOWN)) {
		      // get the related binary lights
		      List<BinaryLight> sameLocationLigths = getBinaryLightFromLocation(detectorLocation);
		      for (BinaryLight binaryLight : sameLocationLigths) {
		           // and switch them on/off depending on the sensed presence
		           if(changingSensor.getSensedPresence()){
		               binaryLight.turnOn();
		           }else{
		               binaryLight.turnOff();
		           }
		      }
		    }
		  }
		
	}

	public void devicePropertyRemoved(GenericDevice arg0, String arg1) {
		// TODO Auto-generated method stub
		
	}

	public void deviceRemoved(GenericDevice arg0) {
		// TODO Auto-generated method stub
		
	}

}
